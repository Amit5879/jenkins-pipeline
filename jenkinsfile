pipeline {
    agent any
    environment {
        DIRECTORY_PATH = '/Users/amitkafe/Documents/university/year 2/trimester 2/SIT223/task 5.1' 
        TESTING_ENVIRONMENT = 'practicetest'
        PRODUCTION_ENVIRONMENT = 'Amit-Production'
        LOG_FILE = 'pipeline_log.txt'
    }
    stages {
        stage('Build') {
            steps {
                script {
                    def logMessage = "Fetch the source code from the directory path: ${env.DIRECTORY_PATH}\n"
                    logMessage += "Compile the code and generate any necessary artifacts\n"
                    writeFile file: env.LOG_FILE, text: logMessage, append: true
                    echo logMessage
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    def logMessage = 'Running unit tests\nRunning integration tests\n'
                    writeFile file: env.LOG_FILE, text: logMessage, append: true
                    echo logMessage
                }
            }
            post {
                success {
                    mail to: "amitkafe5@gmail.com",
                        subject: "Test Stage: Successful",
                        body: "The Test stage was successful."
                }
                failure {
                    mail to: "amitkafe5@gmail.com",
                        subject: "Test Stage: Failed",
                        body: "The Test stage failed."
                }
            }
        }
        stage('Code Quality Check') {
            steps {
                script {
                    def logMessage = 'Checking the quality of the code\n'
                    writeFile file: env.LOG_FILE, text: logMessage, append: true
                    echo logMessage
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    def logMessage = 'Running security scans\n'
                    writeFile file: env.LOG_FILE, text: logMessage, append: true
                    echo logMessage
                }
            }
            post {
                success {
                    mail to: "amitkafe5@gmail.com",
                        subject: "Security Scan: Successful",
                        body: "The Security Scan was successful."
                }
                failure {
                    mail to: "amitkafe5@gmail.com",
                        subject: "Security Scan: Failed",
                        body: "The Security Scan failed."
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    def logMessage = "Deploy the application to the testing environment: ${env.TESTING_ENVIRONMENT}\n"
                    writeFile file: env.LOG_FILE, text: logMessage, append: true
                    echo logMessage
                }
            }
        }
        stage('Approval') {
            steps {
                script {
                    def logMessage = 'Waiting for manual approval...\n'
                    writeFile file: env.LOG_FILE, text: logMessage, append: true
                    echo logMessage
                    sleep 10 
                }
            }
        }
        stage('Deploy to Production') {
            steps {
                script {
                    def logMessage = "Deploying the code to the production environment: ${env.PRODUCTION_ENVIRONMENT}\n"
                    writeFile file: env.LOG_FILE, text: logMessage, append: true
                    echo logMessage
                }
            }
        }
    }
    post {
        always {
            // Archive the log file at the end
            archiveArtifacts artifacts: env.LOG_FILE
        }
        success {
            // Send an email with the log file attached
            emailext(
                to: "amitkafe5@gmail.com",
                subject: "Build Status: Successful",
                body: "The entire pipeline execution was successful. Please find the attached log file.",
                attachmentsPattern: env.LOG_FILE
            )
        }
        failure {
            // Send an email with the log file attached
            emailext(
                to: "amitkafe5@gmail.com",
                subject: "Build Status: Failed",
                body: "The pipeline execution failed. Please find the attached log file.",
                attachmentsPattern: env.LOG_FILE
            )
        }
    }
}
