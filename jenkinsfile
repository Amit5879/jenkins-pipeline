pipeline {
    agent any
    environment {
        DIRECTORY_PATH = '/Users/amitkafe/Documents/university/year 2/trimester 2/SIT223/task 5.1'
        STAGING_ENVIRONMENT = 'AWS-EC2-Staging'
        PRODUCTION_ENVIRONMENT = 'AWS-EC2-Production'
        RECIPIENT_EMAIL = "amitkafe5@gmail.com"
    }
    stages {
        stage('Build') {
            steps {
                echo 'Stage 1: Build - Building the code using Maven'
                echo 'Tool: Maven'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Stage 2: Unit and Integration Tests - Running unit and integration tests using JUnit'
                echo 'Tool: JUnit'
            }
            post {
                always {
                    echo "Unit and Integration Tests stage finished. Sending notification..."
                }
                success {
                    emailext (
                        to: "${env.RECIPIENT_EMAIL}",
                        subject: "Success: Unit and Integration Tests Stage - ${currentBuild.fullDisplayName}",
                        body: "The Unit and Integration Tests stage has completed successfully.",
                        attachLog: true
                    )
                }
                failure {
                    emailext (
                        to: "${env.RECIPIENT_EMAIL}",
                        subject: "Failure: Unit and Integration Tests Stage - ${currentBuild.fullDisplayName}",
                        body: "The Unit and Integration Tests stage has failed.",
                        attachLog: true
                    )
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Stage 3: Code Analysis - Analyzing code quality using SonarQube'
                echo 'Tool: SonarQube'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Stage 4: Security Scan - Scanning code for vulnerabilities using OWASP ZAP'
                echo 'Tool: OWASP ZAP'
            }
            post {
                always {
                    echo "Security Scan stage finished. Sending notification..."
                }
                success {
                    emailext (
                        to: "${env.RECIPIENT_EMAIL}",
                        subject: "Success: Security Scan Stage - ${currentBuild.fullDisplayName}",
                        body: "The Security Scan stage has completed successfully.",
                        attachLog: true
                    )
                }
                failure {
                    emailext (
                        to: "${env.RECIPIENT_EMAIL}",
                        subject: "Failure: Security Scan Stage - ${currentBuild.fullDisplayName}",
                        body: "The Security Scan stage has failed.",
                        attachLog: true
                    )
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Stage 5: Deploy to Staging - Deploying to the staging environment'
                echo "Environment: ${env.STAGING_ENVIRONMENT}"
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Stage 6: Integration Tests on Staging - Running integration tests on the staging environment'
                echo 'Tool: JUnit'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Stage 7: Deploy to Production - Deploying to the production environment'
                echo "Environment: ${env.PRODUCTION_ENVIRONMENT}"
            }
        }
    }
    post {
        always {
            echo "Pipeline finished. Sending final notification..."
        }
        success {
            emailext (
                to: "${env.RECIPIENT_EMAIL}",
                subject: "Pipeline Success: ${currentBuild.fullDisplayName}",
                body: "Pipeline ${currentBuild.fullDisplayName} has completed successfully.",
                attachLog: true
            )
        }
        failure {
            emailext (
                to: "${env.RECIPIENT_EMAIL}",
                subject: "Pipeline Failure: ${currentBuild.fullDisplayName}",
                body: "Pipeline ${currentBuild.fullDisplayName} has failed.",
                attachLog: true
            )
        }
    }
}
